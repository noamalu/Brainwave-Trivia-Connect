i want to implement a trivia game according to the instructions in the attached PDF.
please read the instructions very carefully and help me with the following implementations. 
if at any point you think my ideas for implementing could be improved let me now how you want to improve them and implement as you wish
to do so, I wrote the attached classes.
right now my program supports:
 - starting  a server
 - starting the clients: asking them for their names and sending it o the server
 - the server prints the connected clients names (i.e communication works client -> server)
 - the server sends the clients a true/false question
 - each client prints the msg 

in order to continue the implementation i need the following adjustments:

- i need the communication between the server and the client to be event-based.
- i need a "gameIsON" field in the server class. 
  this field is boolean, and turns on (true) if 10 seconds passed since the last client connected to the server.
- the possible events are:
  -- a client was connected -> in this case wait 15 seconds. if during these 15 seconds another client connects then restart the timer. otherwise start the game (gameIsOn = True)
  -- game starting -> server sends a msg to all clients "Game is starting ..."
  -- during a game there are 2 kinds of "sub-events" 
     1) the server didnt send the question to all clients yet -> to implement this i think we can use a boolean field "question_recieved" in the clients that turn on after the client receives a msg from server && gameIsOn 
        that means that while the client is wating for a question from the server (question_recieved = False) it doesnt print
     2) the server sent the question to all clients and now waits for them to respond (question_recieved)-> now the client prints "Enter your answer:" and expects an input from the user. after the user inserts the answer,
        question_recieved is set back to false until the next question from the server.
  -- the game is over when only 1 client remains. when this happens the server prints "Player {client.name} Won!" and exits



          questions = fetch_and_parse_questions(10, "boolean") #another option is multiple 
        ####################################################  
        # TODO: Add answers structure to be passed to clients
        ####################################################

        # send_message_to_all_clients("Hello, clients! This is your captain speaking, we are heading towards the iceberg!")     
        send_message_to_all_clients("Let's start playing!\n")
        print(questions[0]['question'])
        send_message_to_all_clients(questions[0]['question'])

        # while True:
        #     # print("I am sending a msg to all my children\n")
        #     time.sleep(2)
    except KeyboardInterrupt:
        print("Server is shutting down.")
        # Add any cleanup code here (closing sockets, etc.)